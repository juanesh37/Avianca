
-- Create 2 Tablespaces
-- a. first one with 2 Gb and 1 datafile, tablespace should be named " avianca "
-- b. Undo tablespace with 25Mb of space and 1 datafile
create tablespace AVIANCA
datafile 'avianca.data'
size 2G autoextend on;

-- Set the undo tablespace to be used in the system 
create undo tablespace UNDO
datafile 'undo.data'
size 25m autoextend on;

-- Create a DBA user (with the role DBA) and assign it to the tablespace called " avianca ", this user has
-- unlimited space on the tablespace (The user should have permission to connect)
Create user userdba
identified by userdba
default tablespace AVIANCA
quota unlimited  on AVIANCA;
GRANT CREATE SESSION,CONNECT, DBA TO userdba;
grant resource  to userdba;

-- Create 2 profiles
-- a. Profile 1: "clerk" password life 40 days, one session per user, 10 minutes idle, 4 failed login attempts
Create Profile clerk limit
PASSWORD_LIFE_TIME 40
sessions_per_user 1  
IDLE_TIME 10
FAILED_LOGIN_ATTEMPTS 4;

-- b. Profile 3: "development" password life 100 days, two session per user, 30 minutes idle, no failed login attempts

Create Profile development limit
PASSWORD_LIFE_TIME 100
sessions_per_user 2
IDLE_TIME 30
FAILED_LOGIN_ATTEMPTS 1;

-- Create 4 users, assign them the tablespace "avianca?"; 2 of them should have the clerk profile and the
-- remaining the development profile, all the users should be allow to connect to the database.

Create user user1
identified by user1
default tablespace AVIANCA
quota unlimited  on AVIANCA
PROFILE clerk;
GRANT CONNECT TO user1;

Create user user2
identified by user2
default tablespace AVIANCA
quota unlimited  on AVIANCA
PROFILE clerk;
GRANT CONNECT TO user2;

Create user user3
identified by user3
default tablespace AVIANCA
quota unlimited  on AVIANCA
PROFILE development;
GRANT CONNECT TO user3;

Create user user4 
identified by user4
default tablespace AVIANCA
quota unlimited  on AVIANCA
PROFILE development;
GRANT CONNECT TO user4;

-- Lock one user associate with clerk profile
alter user user4 account lock;

-- Create tables with its columns according to your normalization

CREATE TABLE "Habilitacion" (
  "Id" numeric(9,0) primary key,
  "Nombre" varchar2(250) not null,
  "Descripcion" varchar2(250)
);

CREATE TABLE "TipoLicencia" (
  "Id" numeric(9,0) primary key not null,
  "Descripcion" varchar(250),
  "Id_Habilitacion" numeric(9,0),
  constraint fk_TipoLicencia_Habilitacion foreign key ("Id_Habilitacion") references "Habilitacion"("Id")
);

CREATE TABLE "Pilotos" (
  "Id" numeric(9,0) primary key,  
  "Nivel_Ingles" varchar2(250),
  "Cant_Horas_Vuelo" integer,
  "Cargo" varchar2(250),
  "Id_TipoLicencia" numeric(9,0) null,
  "Id_Empleados" numeric(9,0),
  constraint fk_Pilotos_TipoLicencia foreign key ("Id_TipoLicencia") references "TipoLicencia" ("Id"),
  constraint fk_Pilotos_Empleados foreign key ("Id_Empleados") references "Empleados"("Id")
);

CREATE TABLE "Empleados" (
  "Id" numeric(9,0) primary key,
  "Nombre" varchar2(250),
  "Apellido" varchar2(250),
  "Sexo" varchar2(250),
  "Fec_Nacimiento" date,
  "Antiguedad" integer,
  "Fec_Ult_Entre_Recib" date,
  "Direccion" varchar2(250),
  "Email" varchar2(250),
  "Celular" varchar2(250),
  "Horas_Descanso_Ult_Vuelo" integer,
  "Estado" varchar2(250),
  "Ubicacion_Actual" varchar2(250)
);

CREATE TABLE "Personal" (
  "Id" numeric(9,0) primary key,
  "Tipo" varchar2(250) not null,
  "Id_Empleados" numeric(9,0),
  "Id_Itinerario" numeric(9,0),
  constraint fk_Personal_Empleados foreign key ("Id_Empleados") references "Empleados"("Id"),
  constraint fk_Personal_Itinerario foreign key ("Id_Itinerario") references "Itinerario"("Id")
);

CREATE TABLE "Itinerario" (
  "Id" numeric(9,0) primary key,  
  "Fecha_Est_Sal" date,
  "Fecha_Est_Lleg" date,
  "Fecha_Real_Sal" date,
  "Fecha_Real_Lleg" date,
  "Hora_Est_Sal" timestamp,
  "Hora_Est_Lleg" timestamp,
  "Hora_Real_Sal" timestamp,
  "Hora_Real_Lleg" timestamp,
  "DuracionReal" integer,
  "Id_Vuelo" numeric(9,0),
  "Id_Aeronave" numeric(9,0)
);

CREATE TABLE "Aeronave" (
  "Id" numeric(9,0) primary key,
  "Matricula" varchar2(250),
  "Num_Serial" integer,
  "Edad" varchar2(250),
  "Cant_Sillas_Negocios" integer,
  "Cant_Sillas_Economica" integer
);

CREATE TABLE "Aeropuerto" (
  "Id" numeric(9,0) primary key,
  "Nombre" varchar2(250),
  "Abreviacion" varchar2(250),
  "Ciudad" varchar2(250),
  "Coordenadas" varchar2(250),
  "Pais" varchar2(250)
);

CREATE TABLE "Checkin" (
  "Id" numeric(9,0) primary key,  
  "Num_Confirm_Checkin" integer,
  "Nombre_Contacto_Emer" varchar2(250),
  "Ciudad_Contacto_Emer" varchar2(250),
  "Pais_Contacto_Emer" varchar2(250),
  "Correo_Contacto_Emer" varchar2(250),
  "Numero_Contacto_Emer" integer,  
  "Silla_Asignada" varchar2(250),
  "Tipo_Silla" varchar2(250),
  "Id_Pasajero" numeric(9,0),
  "Id_Itinerario" numeric(9,0)
);

CREATE TABLE "Rutas" (
  "Id" numeric(9,0)primary key,
  "Id_Aeropuerto_Origen" numeric(9,0),
  "Id_Aeropuerto_Destino" numeric(9,0),
  "Distancia" integer
);

CREATE TABLE "Pasajeros" (
  "Id" numeric(9,0) primary key,
  "Tipo_Documento" varchar2(250),
  "Num_Documento" varchar2(250),
  "Nombre" varchar2(250),
  "Apellido" varchar2(250)
);

CREATE TABLE "Vuelo" (
  "Id" numeric(9,0) primary key,
  "Id_Ruta" numeric(9,0),
  "Nombre" varchar2(250),
  "Frecuencia" integer
);

CREATE TABLE "Log_Vuelo" (
  "Id" numeric(9,0) primary key,
  "Id_Itinerario" numeric(9,0),
  "TimeStamp" timestamp,
  "HoraUTC" timestamp,
  "Latitud" varchar2(250),
  "Longitud" varchar2(250),
  "Altitud" integer,
  "Velocidad" integer,
  "Dirreccion" integer
);


